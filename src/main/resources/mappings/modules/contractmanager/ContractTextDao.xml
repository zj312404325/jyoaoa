<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.contractmanager.dao.ContractTextDao">
    
	<sql id="contractTextColumns">
		a.id AS "id",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		a.contractmanager AS "contractmanager.id",
		a.textname AS "textname",
		a.textclassid AS "textclassid",
		a.textclass AS "textclass",
		a.texturl AS "texturl",
		a.textremark AS "textremark"
	</sql>
	
	<sql id="contractTextJoins">
		LEFT JOIN contractmanager b ON b.id = a.contractmanager
	</sql>
	
    
	<select id="get" resultType="ContractText" >
		SELECT 
			<include refid="contractTextColumns"/>
		FROM contracttext a
		<include refid="contractTextJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="ContractText" >
		SELECT 
			<include refid="contractTextColumns"/>
		FROM contracttext a
		<include refid="contractTextJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="contractmanager != null and contractmanager.id != null and contractmanager.id != ''">
				AND a.contractmanager = #{contractmanager.id}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date ASC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="ContractText" >
		SELECT 
			<include refid="contractTextColumns"/>
		FROM contracttext a
		<include refid="contractTextJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date ASC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO contracttext(
			id,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag,
			contractmanager,
			textname,
			textclassid,
			textclass,
			texturl,
			textremark
		) VALUES (
			#{id},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag},
			#{contractmanager.id},
			#{textname},
			#{textclassid},
			#{textclass},
			#{texturl},
			#{textremark}
		)
	</insert>
	
	<update id="update">
		UPDATE contracttext SET 	
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
			contractmanager = #{contractmanager.id},
			textname = #{textname},
			textclassid = #{textclassid},
			textclass = #{textclass},
			texturl = #{texturl},
			textremark = #{textremark}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM contracttext
		<choose>
			<when test="id !=null and id != ''">
				WHERE id = #{id}
			</when>
			<otherwise>
				WHERE contractmanager = #{contractmanager.id}
			</otherwise>
		</choose>
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE contracttext SET 
			del_flag = #{DEL_FLAG_DELETE}
		<choose>
			<when test="id !=null and id != ''">
				WHERE id = #{id}
			</when>
			<otherwise>
				WHERE contractmanager = #{contractmanager.id}
			</otherwise>
		</choose>
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="ContractText" statementType="STATEMENT">
		select * FROM contracttext  where ${propertyName} = '${value}'
	</select>
	
</mapper>